package java_testcases.junit;

import static org.junit.Assert.*;
import org.junit.Test;
import java_programs.SQRT;
import com.google.gson.JsonParser;

public class SQRT_TEST {
  /**
   * Junit test case for SQRT generated by tests generator.
   */
  @Test
  public void sqrt_test1() {
    try {
      Object actual = SQRT.sqrt((double)2,(double)0.01);
      assertEquals("1.4166666666666665",actual.toString() );
    }
    catch(IllegalArgumentException e) {
      throw new IllegalArgumentException("Arguments are illegal!") ;
    }
  }

  @Test
  public void sqrt_test2() {
    try {
      Object actual = SQRT.sqrt((double)2,(double)0.5);
      assertEquals("1.5",actual.toString() );
    }
    catch(IllegalArgumentException e) {
      throw new IllegalArgumentException("Arguments are illegal!") ;
    }
  }

  @Test(timeout = 100000)
  public void sqrt_test3() {
    try {
      Object actual = SQRT.sqrt((double)2,(double)0.3);
      assertEquals(1.5,actual);
    }
    catch(IllegalArgumentException e) {
      throw new IllegalArgumentException("Arguments are illegal!") ;
    }
  }

  @Test
  public void sqrt_test4() {
    try {
      Object actual = SQRT.sqrt((double)4,(double)0.2);
      assertEquals("2.0",actual.toString() );
    }
    catch(IllegalArgumentException e) {
      throw new IllegalArgumentException("Arguments are illegal!") ;
    }
  }

  @Test(timeout = 100)
  public void sqrt_test5() {
    try {
      Object actual = SQRT.sqrt((double)27,(double)0.01);
      assertEquals("5.196176253962744",actual.toString() );
    }
    catch(IllegalArgumentException e) {
      throw new IllegalArgumentException("Arguments are illegal!") ;
    }
  }

  @Test
  public void sqrt_test6() {
    try {
      Object actual = SQRT.sqrt((float)33,(float)0.05);
      assertEquals("5.744665154617621",actual.toString() );
    }
    catch(IllegalArgumentException e) {
      throw new IllegalArgumentException("Arguments are illegal!") ;
    }
  }

  @Test
  public void sqrt_test7() {
    try {
      Object actual = SQRT.sqrt((float)170,(float)0.03);
      assertEquals("13.038404876679632",actual.toString() );
    }
    catch(IllegalArgumentException e) {
      throw new IllegalArgumentException("Arguments are illegal!") ;
    }
  }

}
