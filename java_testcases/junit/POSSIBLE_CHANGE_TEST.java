package java_testcases.junit;

import static org.junit.Assert.*;
import org.junit.Test;
import java_programs.POSSIBLE_CHANGE;
import com.google.gson.JsonParser;

public class POSSIBLE_CHANGE_TEST {
  /**
   * Junit test case for POSSIBLE_CHANGE generated by tests generator.
   */
  @Test(timeout = 100)
  public void possible_change_test1() {
    try {
      Object actual = POSSIBLE_CHANGE.possible_change(new int[]{1,5,10,25},(int)11);
      assertEquals("4",actual.toString() );
    }
    catch(IllegalArgumentException e) {
      throw new IllegalArgumentException("Arguments are illegal!") ;
    }
  }

  @Test(timeout = 100)
  public void possible_change_test2() {
    try {
      Object actual = POSSIBLE_CHANGE.possible_change(new int[]{1,5,10,25},(int)75);
      assertEquals("121",actual.toString() );
    }
    catch(IllegalArgumentException e) {
      throw new IllegalArgumentException("Arguments are illegal!") ;
    }
  }

  @Test(timeout = 100)
  public void possible_change_test3() {
    try {
      Object actual = POSSIBLE_CHANGE.possible_change(new int[]{1,5,10,25},(int)34);
      assertEquals("18",actual.toString() );
    }
    catch(IllegalArgumentException e) {
      throw new IllegalArgumentException("Arguments are illegal!") ;
    }
  }

  @Test(timeout = 100)
  public void possible_change_test4() {
    try {
      Object actual = POSSIBLE_CHANGE.possible_change(new int[]{1,5,10},(int)34);
      assertEquals("16",actual.toString() );
    }
    catch(IllegalArgumentException e) {
      throw new IllegalArgumentException("Arguments are illegal!") ;
    }
  }

  @Test(timeout = 100)
  public void possible_change_test5() {
    try {
      Object actual = POSSIBLE_CHANGE.possible_change(new int[]{1,5,10,25},(int)140);
      assertEquals("568",actual.toString() );
    }
    catch(IllegalArgumentException e) {
      throw new IllegalArgumentException("Arguments are illegal!") ;
    }
  }

  @Test(timeout = 100)
  public void possible_change_test6() {
    try {
      Object actual = POSSIBLE_CHANGE.possible_change(new int[]{1,5,10,25,50},(int)140);
      assertEquals("786",actual.toString() );
    }
    catch(IllegalArgumentException e) {
      throw new IllegalArgumentException("Arguments are illegal!") ;
    }
  }

  @Test(timeout = 100)
  public void possible_change_test7() {
    try {
      Object actual = POSSIBLE_CHANGE.possible_change(new int[]{1,5,10,25,50,100},(int)140);
      assertEquals("817",actual.toString() );
    }
    catch(IllegalArgumentException e) {
      throw new IllegalArgumentException("Arguments are illegal!") ;
    }
  }

  @Test(timeout = 100)
  public void possible_change_test8() {
    try {
      Object actual = POSSIBLE_CHANGE.possible_change(new int[]{1,3,7,42,78},(int)140);
      assertEquals("981",actual.toString() );
    }
    catch(IllegalArgumentException e) {
      throw new IllegalArgumentException("Arguments are illegal!") ;
    }
  }

  @Test(timeout = 100)
  public void possible_change_test9() {
    try {
      Object actual = POSSIBLE_CHANGE.possible_change(new int[]{3,7,42,78},(int)140);
      assertEquals("20",actual.toString() );
    }
    catch(IllegalArgumentException e) {
      throw new IllegalArgumentException("Arguments are illegal!") ;
    }
  }

}
