package java_testcases.junit;

import static org.junit.Assert.*;
import org.junit.Test;
import java_programs.QUICKSORT;
import com.google.gson.JsonParser;

public class QUICKSORT_TEST {
  /**
   * Junit test case for QUICKSORT generated by tests generator.
   */
  @Test(timeout = 100)
  public void quicksort_test1() {
    try {
      Object actual = QUICKSORT.quicksort(new java.util.ArrayList(java.util.Arrays.asList(1,2,6,72,7,33,4)));
      assertEquals("[1,2,4,6,7,33,72]",actual.toString().replaceAll(" ", "") );
    }
    catch(IllegalArgumentException e) {
      throw new IllegalArgumentException("Arguments are illegal!") ;
    }
  }

  @Test(timeout = 100)
  public void quicksort_test2() {
    try {
      Object actual = QUICKSORT.quicksort(new java.util.ArrayList(java.util.Arrays.asList(3,1,4,1,5,9,2,6,5,3,5,8,9,7,9,3)));
      assertEquals("[1,1,2,3,3,3,4,5,5,5,6,7,8,9,9,9]",actual.toString().replaceAll(" ", "") );
    }
    catch(IllegalArgumentException e) {
      throw new IllegalArgumentException("Arguments are illegal!") ;
    }
  }

  @Test(timeout = 100)
  public void quicksort_test3() {
    try {
      Object actual = QUICKSORT.quicksort(new java.util.ArrayList(java.util.Arrays.asList(5,4,3,2,1)));
      assertEquals("[1,2,3,4,5]",actual.toString().replaceAll(" ", "") );
    }
    catch(IllegalArgumentException e) {
      throw new IllegalArgumentException("Arguments are illegal!") ;
    }
  }

  @Test(timeout = 100)
  public void quicksort_test4() {
    try {
      Object actual = QUICKSORT.quicksort(new java.util.ArrayList(java.util.Arrays.asList(5,4,3,1,2)));
      assertEquals("[1,2,3,4,5]",actual.toString().replaceAll(" ", "") );
    }
    catch(IllegalArgumentException e) {
      throw new IllegalArgumentException("Arguments are illegal!") ;
    }
  }

  @Test(timeout = 100)
  public void quicksort_test5() {
    try {
      Object actual = QUICKSORT.quicksort(new java.util.ArrayList(java.util.Arrays.asList(8,1,14,9,15,5,4,3,7,17,11,18,2,12,16,13,6,10)));
      assertEquals("[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18]",actual.toString().replaceAll(" ", "") );
    }
    catch(IllegalArgumentException e) {
      throw new IllegalArgumentException("Arguments are illegal!") ;
    }
  }

  @Test(timeout = 100)
  public void quicksort_test6() {
    try {
      Object actual = QUICKSORT.quicksort(new java.util.ArrayList(java.util.Arrays.asList(9,4,5,2,17,14,10,6,15,8,12,13,16,3,1,7,11)));
      assertEquals("[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17]",actual.toString().replaceAll(" ", "") );
    }
    catch(IllegalArgumentException e) {
      throw new IllegalArgumentException("Arguments are illegal!") ;
    }
  }

  @Test(timeout = 100)
  public void quicksort_test7() {
    try {
      Object actual = QUICKSORT.quicksort(new java.util.ArrayList(java.util.Arrays.asList(13,14,7,16,9,5,24,21,19,17,12,10,1,15,23,25,11,3,2,6,22,8,20,4,18)));
      assertEquals("[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]",actual.toString().replaceAll(" ", "") );
    }
    catch(IllegalArgumentException e) {
      throw new IllegalArgumentException("Arguments are illegal!") ;
    }
  }

  @Test(timeout = 100)
  public void quicksort_test8() {
    try {
      Object actual = QUICKSORT.quicksort(new java.util.ArrayList(java.util.Arrays.asList(8,5,15,7,9,14,11,12,10,6,2,4,13,1,3)));
      assertEquals("[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15]",actual.toString().replaceAll(" ", "") );
    }
    catch(IllegalArgumentException e) {
      throw new IllegalArgumentException("Arguments are illegal!") ;
    }
  }

  @Test(timeout = 100)
  public void quicksort_test9() {
    try {
      Object actual = QUICKSORT.quicksort(new java.util.ArrayList(java.util.Arrays.asList(4,3,7,6,5,2,1)));
      assertEquals("[1,2,3,4,5,6,7]",actual.toString().replaceAll(" ", "") );
    }
    catch(IllegalArgumentException e) {
      throw new IllegalArgumentException("Arguments are illegal!") ;
    }
  }

  @Test(timeout = 100)
  public void quicksort_test10() {
    try {
      Object actual = QUICKSORT.quicksort(new java.util.ArrayList(java.util.Arrays.asList(4,3,1,5,2)));
      assertEquals("[1,2,3,4,5]",actual.toString().replaceAll(" ", "") );
    }
    catch(IllegalArgumentException e) {
      throw new IllegalArgumentException("Arguments are illegal!") ;
    }
  }

  @Test(timeout = 100)
  public void quicksort_test11() {
    try {
      Object actual = QUICKSORT.quicksort(new java.util.ArrayList(java.util.Arrays.asList(5,4,2,3,6,7,1)));
      assertEquals("[1,2,3,4,5,6,7]",actual.toString().replaceAll(" ", "") );
    }
    catch(IllegalArgumentException e) {
      throw new IllegalArgumentException("Arguments are illegal!") ;
    }
  }

  @Test(timeout = 100)
  public void quicksort_test12() {
    try {
      Object actual = QUICKSORT.quicksort(new java.util.ArrayList(java.util.Arrays.asList(10,16,6,1,14,19,15,2,9,4,18,17,12,3,11,8,13,5,7)));
      assertEquals("[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19]",actual.toString().replaceAll(" ", "") );
    }
    catch(IllegalArgumentException e) {
      throw new IllegalArgumentException("Arguments are illegal!") ;
    }
  }

  @Test(timeout = 100)
  public void quicksort_test13() {
    try {
      Object actual = QUICKSORT.quicksort(new java.util.ArrayList(java.util.Arrays.asList(10,16,6,1,14,19,15,2,9,4,18)));
      assertEquals("[1,2,4,6,9,10,14,15,16,18,19]",actual.toString().replaceAll(" ", "") );
    }
    catch(IllegalArgumentException e) {
      throw new IllegalArgumentException("Arguments are illegal!") ;
    }
  }

}
